@page "/produtos"

@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h4" Class="mb-4">Produtos</MudText>

    <MudPaper Class="pa-4 mb-4">
        <MudGrid>
            <MudItem xs="12" sm="3">
                <MudTextField @bind-Value="searchString" Placeholder="Buscar por produto..." Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                              Class="mt-0"></MudTextField>
            </MudItem>
        </MudGrid>
    </MudPaper>

    <MudTable Items="@produtos" Filter="@(FilterFunc)" Hover="true" Dense="true" Bordered="true" Striped="true"
              LoadingProgressColor="Color.Primary">
        <HeaderContent>
            <MudTh>Codigo</MudTh>
            <MudTh>Produto</MudTh>
            <MudTh>Preço</MudTh>
            <MudTh>Ações</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Codigo">@context.Code</MudTd>
            <MudTd DataLabel="Produto">@context.Name</MudTd>
            <MudTd DataLabel="Preço">@context.Price</MudTd>
            <MudTd>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small"
                           OnClick="@(() => ViewDetails(context.Code))">
                    Detalhes
                </MudButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10, 25, 50, 100}"/>
        </PagerContent>
    </MudTable>

    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Size="Size.Large" Class="floating-button"
            OnClick="@(() => NavigateToCreate())"/>
</MudContainer>

<style>
    .floating-button {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        z-index: 10;
    }
</style>

@code {
    private string searchString = "";
    private List<ProductModel> produtos = new List<ProductModel>();

    protected override void OnInitialized()
    {
        // Dados de exemplo - Na prática, você buscaria estes dados de um serviço/API
        produtos = new List<ProductModel>
        {
            new ProductModel { Id = 1, Code = "P01", Name = "Produto 1", Price = 10.0m, Stock = 10 },
            new ProductModel { Id = 2, Code = "P02", Name = "Produto 2", Price = 20.0m, Stock = 20 },
            new ProductModel { Id = 3, Code = "P03", Name = "Produto 3", Price = 30.0m, Stock = 30 },
        };
    }

    private bool FilterFunc(ProductModel element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (element.Code.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

    private void ViewDetails(string id)
    {
        NavigationManager.NavigateTo($"/produtos/{id}");
    }

    private void NavigateToCreate()
    {
        NavigationManager.NavigateTo("/cadastro-produto");
    }

}