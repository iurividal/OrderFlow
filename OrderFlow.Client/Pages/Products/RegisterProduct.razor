@page "/cadastro-produto"
@using System.ComponentModel.DataAnnotations
@using OrderFlow.Client.Services
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject IProductService _productService

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-6">
    <MudCard Elevation="3">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5">Cadastro de Produto</MudText>
            </CardHeaderContent>
        </MudCardHeader>

        <MudForm @ref="form" Model="@produto" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" md="4">
                        <MudTextField @bind-Value="produto.Code" Label="Código" Required="true"
                                      RequiredError="Código é obrigatório" Variant="Variant.Outlined"/>
                    </MudItem>

                    <MudItem xs="12" md="8">
                        <MudTextField @bind-Value="produto.Name" Label="Nome" Required="true"
                                      RequiredError="Nome é obrigatório" Variant="Variant.Outlined"/>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudNumericField @bind-Value="produto.Price" Label="Preço" Required="true"
                                         RequiredError="Preço é obrigatório" Variant="Variant.Outlined"
                                         Format="N2" Min="0" Adornment="Adornment.Start" AdornmentText="R$"/>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudSelect @bind-Value="produto.UnitType" Label="Tipo de Medida" Required="true"
                                   RequiredError="Tipo de medida é obrigatório" Variant="Variant.Outlined"
                                   AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Unidade")">Unidade</MudSelectItem>
                            <MudSelectItem Value="@("Kg")">Quilo (Kg)</MudSelectItem>
                            <MudSelectItem Value="@("g")">Grama (g)</MudSelectItem>
                            <MudSelectItem Value="@("L")">Litro (L)</MudSelectItem>
                            <MudSelectItem Value="@("mL")">Mililitro (mL)</MudSelectItem>
                            <MudSelectItem Value="@("m")">Metro (m)</MudSelectItem>
                            <MudSelectItem Value="@("cm")">Centímetro (cm)</MudSelectItem>
                            <MudSelectItem Value="@("Pacote")">Pacote</MudSelectItem>
                            <MudSelectItem Value="@("Caixa")">Caixa</MudSelectItem>
                        </MudSelect>
                    </MudItem>

                    <MudItem xs="12">
                        <MudTextField @bind-Value="produto.Description" Label="Descrição"
                                      Variant="Variant.Outlined" Lines="3"/>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudNumericField @bind-Value="produto.MinimumStock" Label="Estoque Mínimo"
                                         Variant="Variant.Outlined" Min="0"/>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudNumericField @bind-Value="produto.Stock" Label="Estoque Atual"
                                         Variant="Variant.Outlined" Min="0"/>
                    </MudItem>

                    <MudItem xs="12">
                        <MudCheckBox T="bool" @bind-Checked="produto.Active" Label="Produto Ativo"
                                     Color="Color.Primary"/>
                    </MudItem>
                </MudGrid>
            </MudCardContent>

            <MudCardActions Class="pa-4 justify-space-between">
                <MudButton Variant="Variant.Filled" Color="Color.Error"
                           OnClick="@(() => NavigationManager.NavigateTo("/produtos"))">
                    Cancelar
                </MudButton>
                <div>
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="mr-2"
                               OnClick="@(() => form.ResetAsync())">
                        Limpar
                    </MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                               Disabled="@(!success)" OnClick="SalvarProduto">
                        Salvar
                    </MudButton>
                </div>
            </MudCardActions>
        </MudForm>
    </MudCard>
</MudContainer>

@code {
    private MudForm form;
    private bool success;
    private string[] errors = { };

    ProductModel produto = new ProductModel();

    protected override async Task OnInitializedAsync()
    {
        Init();
    }
    
    private void Init()
    {
        produto = new ProductModel
        {
            Active = true,
            UnitType = "Unidade",
            CreatedAt = DateTime.Now
        };
    }

    private async Task SalvarProduto()
    {
        await form.Validate();

        if (success)
        {
            await _productService.CreateProductAsync(produto);

            Snackbar.Add($"Produto {produto.Name} salvo com sucesso!", Severity.Success);

            Init();
           
            NavigationManager.NavigateTo("/produtos");
        }
    }


}